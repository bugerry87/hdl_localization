<?xml version="1.0"?>
<launch>
    <!-- Let's use sim time! -->
    <param name="/use_sim_time" value="true"/>

    <!-- arguments -->
    <arg name="nodelet_manager" default="velodyne_nodelet_manager" />
    <arg name="points_topic" default="/lidar_points" />
    <arg name="imu_topic" default="/imu/data" />
    <arg name="gps_topic" default="/fix" />
    <arg name="base_link" default="base_link" />
    <arg name="odom_child_frame_id" default="base_link" />
    <arg name="map_frame_id" default="world" />
    <arg name="maps" default="[/share/itri/map.pcd]" />
    <arg name="map_resolution" default="0.5" />

    <!-- in case you use velodyne_driver, comment out the following line -->
    <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/>

    <!-- initializer node -->
    <node 
        pkg="tools"
        name="Initializer"
        type="initializer.py"
        output="screen"
        args="-n Initializer -g $(arg gps_topic) -i $(arg imu_topic) -p $(arg points_topic) -f $(arg map_frame_id)"
    />

    <node pkg="multi_lidar_calibrator" type="multi_lidar_calibrator" name="multi_lidar_calibrator" output="screen">
        <param name="points_parent_src" value="/globalmap"/>
        <param name="points_child_src" value="$(arg points_topic)"/>
        <param name="x" value="-263.0" />
        <param name="y" value="-67.0" />
        <param name="z" value="-9.0" />
        <param name="roll" value="0.0" />
        <param name="pitch" value="0.0" />
        <param name="yaw" value="-2.0" />
    </node>

    <!-- hdl_localization_nodelet -->
    <node pkg="nodelet" type="nodelet" name="hdl_localization_nodelet" args="load hdl_localization/HdlLocalizationNodelet $(arg nodelet_manager)">
        <remap from="/velodyne_points" to="$(arg points_topic)" />
        <remap from="/gpsimu_driver/imu_data" to="$(arg imu_topic)" />
        <remap from="/initialpose" to="/nothing" />
        <!-- odometry frame_id -->
        <param name="map_frame_id" value="$(arg map_frame_id)" />
        <param name="odom_child_frame_id" value="$(arg odom_child_frame_id)" />
        <!-- imu settings -->
        <!-- during "cool_time", imu inputs are ignored -->
        <param name="use_imu" value="false" />
        <param name="invert_imu" value="true" />
        <param name="cool_time_duration" value="2.0" />
        <!-- ndt settings -->
        <!-- if NDT is slow for your PC, try DIRECT1 serach method, which is a bit unstable but extremely fast -->
        <param name="ndt_neighbor_search_method" value="DIRECT7" />
        <param name="ndt_resolution" value="1.0" />
        <param name="downsample_resolution" value="0.5" />
        <!-- if "specify_init_pose" is true, pose estimator will be initialized with the following params -->
        <!-- otherwise, you need to input an initial pose with "2D Pose Estimate" on rviz" -->
        <param name="specify_init_pose" value="true" />
        <param name="init_pos_x" value="-263.5926208496094" />
        <param name="init_pos_y" value="-67.85790252685547" />
        <param name="init_pos_z" value="-9.890708923339844" />
        <param name="init_ori_x" value="-0.011703" />
        <param name="init_ori_y" value="-0.019661" />
        <param name="init_ori_z" value="-0.89071" />
        <param name="init_ori_w" value="0.453995" />
    </node>
    
    <!-- Run Rviz-->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hdl_localization)/rviz/itri.rviz" />

    <!-- globalmap_server_nodelet -->
    <node pkg="nodelet" type="nodelet" name="globalmap_server_nodelet" args="load hdl_localization/GlobalmapServerNodelet $(arg nodelet_manager)">
        <rosparam param="globalmaps_pcd" subst_value="True">$(arg maps)</rosparam>
        <param name="map_frame" value="$(arg map_frame_id)" />
        <param name="downsample_resolution" value="$(arg map_resolution)" />
    </node>
</launch>
